.modal-header
  h4.modal-title {{ 'REGISTER_MODAL.MAIN_HEADING' | translate }}
  button.close(
    type="button",
    aria-label="Close",
    (click)="activeModal.dismiss('Cross click')"
  )
    span(aria-hidden="true") &times;
form#formRegisterUsers([formGroup]="registerForm", (ngSubmit)="onSubmit(registerForm.value)")
  .modal-body
    .form-group([class.has-danger]="registerForm.controls['emails'].hasError('required')")
      label Email Addresses
      rl-tag-input.mb-2(
        [formControl]="registerForm.controls['emails']",
        [placeholder]="'ex: admin@artstor.org'",
        [allowedTagsPattern]="emailRegExp",
        (disallowTag)="disallowTag($event)"
      )
      //- This is a dismissable error message for each email that is invalid - the tag input component automatically removes them, so we want to capture them here
      .mb-2.alert.alert-danger(*ngFor="let email of invalidEmails") {{ email }} is not a valid email address and was removed.
        button.close(
          type="button",
          aria-label="Dismiss Error",
          (click)="dismissEmailError(email)"
        )
          span(aria-hidden="true") &times;
      .form-control-feedback(*ngIf="submitted && registerForm.controls['emails'].hasError('required')")
        | At least one email is required
    .form-group
      label(for="textareaEmailText") Email Text
      textarea#textareaEmailText.form-control([formControl]="registerForm.controls['emailText']")
  .modal-footer
    button#btnCloseModal.btn.btn-secondary(
      (click)="activeModal.close('Close click')",
      type="button"
    ) Close
    button#btnPermissionsUpdate.btn.btn-primary(
      type="submit"
    ) Register